com.google.android.vending.licensing.DeviceLimiter -> com.a.a.a.a.a:
    int isDeviceAllowed(java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener -> com.a.a.a.a.b:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener$Stub -> com.a.a.a.a.c:
    29:36:com.google.android.vending.licensing.ILicenseResultListener asInterface(android.os.IBinder) -> a
    40:40:android.os.IBinder asBinder() -> asBinder
    44:64:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicenseResultListener$Stub$Proxy -> com.a.a.a.a.d:
    android.os.IBinder mRemote -> a
    75:75:android.os.IBinder asBinder() -> asBinder
    83:94:void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicensingService -> com.a.a.a.a.e:
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.ILicensingService$Stub -> com.a.a.a.a.f:
    29:36:com.google.android.vending.licensing.ILicensingService asInterface(android.os.IBinder) -> a
    44:64:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicensingService$Stub$Proxy -> com.a.a.a.a.g:
    android.os.IBinder mRemote -> a
    75:75:android.os.IBinder asBinder() -> asBinder
    83:94:void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.LicenseChecker -> com.a.a.a.a.h:
    java.security.SecureRandom RANDOM -> a
    com.google.android.vending.licensing.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.google.android.vending.licensing.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.util.Set mChecksInProgress -> g
    java.util.Queue mPendingChecks -> h
    177:189:void runChecks() -> b
    192:196:void finishCheck(com.google.android.vending.licensing.LicenseValidator) -> a
    277:279:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    285:287:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    294:301:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator) -> b
    305:315:void cleanupService() -> c
    326:328:void onDestroy() -> a
    293:293:void access$0(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> a
    191:191:void access$1(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> b
    77:77:android.os.Handler access$2(com.google.android.vending.licensing.LicenseChecker) -> a
    80:80:java.util.Set access$3(com.google.android.vending.licensing.LicenseChecker) -> b
    70:70:java.security.PublicKey access$4(com.google.android.vending.licensing.LicenseChecker) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener -> com.a.a.a.a.i:
    com.google.android.vending.licensing.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.google.android.vending.licensing.LicenseChecker this$0 -> a
    222:263:void verifyLicense(int,java.lang.String,java.lang.String) -> a
    266:268:void startTimeout() -> a
    271:273:void clearTimeout() -> b
    199:199:com.google.android.vending.licensing.LicenseValidator access$0(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> a
    270:270:void access$1(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> b
    198:198:com.google.android.vending.licensing.LicenseChecker access$2(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener$1 -> com.a.a.a.a.j:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    206:209:void run() -> run
com.google.android.vending.licensing.LicenseChecker$ResultListener$2 -> com.a.a.a.a.k:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    int val$responseCode -> b
    java.lang.String val$signedData -> c
    java.lang.String val$signature -> d
    224:261:void run() -> run
com.google.android.vending.licensing.LicenseCheckerCallback -> com.a.a.a.a.l:
    void allow(int) -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
com.google.android.vending.licensing.LicenseValidator -> com.a.a.a.a.m:
    com.google.android.vending.licensing.Policy mPolicy -> a
    com.google.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.google.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    68:68:com.google.android.vending.licensing.LicenseCheckerCallback getCallback() -> a
    72:72:int getNonce() -> b
    76:76:java.lang.String getPackageName() -> c
    90:196:void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    206:215:void handleResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    218:219:void handleApplicationError(int) -> a
    222:223:void handleInvalidResponse() -> d
com.google.android.vending.licensing.Policy -> com.a.a.a.a.n:
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    boolean allowAccess() -> a
com.google.android.vending.licensing.ResponseData -> com.a.a.a.a.o:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    46:71:com.google.android.vending.licensing.ResponseData parse(java.lang.String) -> a
    76:76:java.lang.String toString() -> toString
com.google.android.vending.licensing.util.Base64 -> com.a.a.a.a.a.a:
    byte[] ALPHABET -> b
    byte[] WEBSAFE_ALPHABET -> c
    byte[] DECODABET -> d
    byte[] WEBSAFE_DECODABET -> e
    boolean $assertionsDisabled -> a
    378:406:int decode4to3(byte[],int,byte[],int,byte[]) -> a
    419:420:byte[] decode(java.lang.String) -> a
    474:474:byte[] decode(byte[],int,int) -> a
    504:568:byte[] decode(byte[],int,int,byte[]) -> a
com.google.android.vending.licensing.util.Base64DecoderException -> com.a.a.a.a.a.b:
com.halcyonwaves.apps.meinemediathek.ApplicationEntryPoint -> com.halcyonwaves.apps.meinemediathek.ApplicationEntryPoint:
    javax.security.auth.x500.X500Principal DEBUG_DN -> a
    22:43:boolean isApplicationDebuggable(android.content.Context) -> a
    48:49:void onCreate() -> onCreate
com.halcyonwaves.apps.meinemediathek.ChangeLogDialog -> com.halcyonwaves.apps.meinemediathek.a:
    android.app.Activity rootActivity -> a
    48:51:java.lang.String getApplicationVersion() -> c
    57:60:int getApplicationVersionCode() -> d
    65:65:java.lang.String getChangelogStyleDefinition() -> e
    69:102:java.lang.String getHtmlChangelog() -> f
    106:113:void markDialogAsAlreadyDisplayed() -> a
    116:126:java.lang.String parseChangelogReleaseTag(org.xmlpull.v1.XmlPullParser) -> a
    130:173:void show() -> b
    40:40:android.app.Activity access$0(com.halcyonwaves.apps.meinemediathek.ChangeLogDialog) -> a
com.halcyonwaves.apps.meinemediathek.ChangeLogDialog$1 -> com.halcyonwaves.apps.meinemediathek.b:
    com.halcyonwaves.apps.meinemediathek.ChangeLogDialog this$0 -> a
    156:163:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.ChangeLogDialog$2 -> com.halcyonwaves.apps.meinemediathek.c:
    com.halcyonwaves.apps.meinemediathek.ChangeLogDialog this$0 -> a
    168:169:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.SearchResultEntry -> com.halcyonwaves.apps.meinemediathek.d:
    java.lang.String description -> a
    java.lang.String downloadLink -> b
    boolean isCurrentlyFskRestricted -> c
    java.io.File previewImage -> d
    java.lang.String title -> e
com.halcyonwaves.apps.meinemediathek.activities.BaseActivity -> com.halcyonwaves.apps.meinemediathek.activities.a:
    16:28:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    33:38:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
com.halcyonwaves.apps.meinemediathek.activities.HomeActivity -> com.halcyonwaves.apps.meinemediathek.activities.HomeActivity:
    com.google.android.vending.licensing.LicenseChecker mChecker -> a
    70:85:void onCreate(android.os.Bundle) -> onCreate
    89:91:void onDestroy() -> onDestroy
com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity -> com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity:
    android.widget.Button cancelDownload -> a
    int cancelId -> b
    android.widget.TextView movieDescription -> c
    android.widget.TextView movieTitle -> d
    android.content.ServiceConnection serviceConnection -> e
    android.os.Messenger serviceMessanger -> f
    48:51:void doBindService() -> a
    54:58:void doUnbindService() -> b
    62:110:void onCreate(android.os.Bundle) -> onCreate
    114:116:void onDestroy() -> onDestroy
    45:45:void access$0(com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity,android.os.Messenger) -> a
    26:26:int access$1(com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity) -> a
    45:45:android.os.Messenger access$2(com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity) -> b
com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity$1 -> com.halcyonwaves.apps.meinemediathek.activities.b:
    com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity this$0 -> a
    35:37:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    41:43:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity$2 -> com.halcyonwaves.apps.meinemediathek.activities.c:
    com.halcyonwaves.apps.meinemediathek.activities.ManageDownloadActivity this$0 -> a
    89:108:void onClick(android.view.View) -> onClick
com.halcyonwaves.apps.meinemediathek.activities.MovieOverviewActivity -> com.halcyonwaves.apps.meinemediathek.activities.MovieOverviewActivity:
    11:13:void onCreate(android.os.Bundle) -> onCreate
com.halcyonwaves.apps.meinemediathek.activities.SearchResultsActivity -> com.halcyonwaves.apps.meinemediathek.activities.SearchResultsActivity:
    11:13:void onCreate(android.os.Bundle) -> onCreate
com.halcyonwaves.apps.meinemediathek.adapter.SearchResultsAdapter -> com.halcyonwaves.apps.meinemediathek.a.a:
    android.view.LayoutInflater mInflater -> a
    30:41:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    45:49:void setData(java.util.List) -> a
com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment -> com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment:
    android.widget.Button btnDownloadMoview -> a
    java.lang.String downloadLink -> b
    boolean fskRestricted -> c
    android.widget.ImageView ivPreviewImage -> d
    java.lang.String previewImagePath -> e
    android.content.ServiceConnection serviceConnection -> f
    android.os.Messenger serviceMessanger -> g
    android.widget.TextView tvMovieDescription -> h
    android.widget.TextView tvMovieTitle -> i
    62:65:void doBindService() -> a
    68:72:void doUnbindService() -> b
    76:87:int getNextNotificationId() -> c
    92:166:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    171:173:void onDestroyView() -> onDestroyView
    177:196:void startEpisodeDownload() -> d
    56:56:void access$0(com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment,android.os.Messenger) -> a
    175:175:void access$1(com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment) -> a
com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$1 -> com.halcyonwaves.apps.meinemediathek.fragments.a:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment this$0 -> a
    46:48:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    52:54:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2 -> com.halcyonwaves.apps.meinemediathek.fragments.b:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment this$0 -> a
    122:150:void onClick(android.view.View) -> onClick
    118:118:com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment access$0(com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2) -> a
com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2$1 -> com.halcyonwaves.apps.meinemediathek.fragments.c:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2 this$1 -> a
    132:133:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2$2 -> com.halcyonwaves.apps.meinemediathek.fragments.d:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieOverviewFragment$2 this$1 -> a
    139:139:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment -> com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment:
    android.widget.Button btnSearch -> a
    android.widget.EditText etTitleToSearchFor -> b
    android.widget.TextView tvPlayerNotice -> c
    45:57:boolean isServiceRunning(java.lang.String) -> a
    63:149:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    41:41:android.widget.EditText access$0(com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment) -> a
com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment$1 -> com.halcyonwaves.apps.meinemediathek.fragments.e:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment this$0 -> a
    84:87:void onClick(android.view.View) -> onClick
com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment$2 -> com.halcyonwaves.apps.meinemediathek.fragments.f:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment this$0 -> a
    android.content.SharedPreferences val$appPreferences -> b
    104:110:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment$3 -> com.halcyonwaves.apps.meinemediathek.fragments.g:
    com.halcyonwaves.apps.meinemediathek.fragments.MovieSearchFragment this$0 -> a
    118:125:void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.meinemediathek.fragments.SearchResultsFragment -> com.halcyonwaves.apps.meinemediathek.fragments.SearchResultsFragment:
    com.halcyonwaves.apps.meinemediathek.adapter.SearchResultsAdapter searchResultsAdapter -> a
    32:43:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    47:48:void onClick(android.content.DialogInterface,int) -> onClick
    54:58:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    63:77:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    81:82:void onLoaderReset(android.content.Loader) -> onLoaderReset
    87:111:void onLoadFinished(android.content.Loader,java.util.List) -> a
    1:1:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.halcyonwaves.apps.meinemediathek.loaders.ZDFSearchResultsLoader -> com.halcyonwaves.apps.meinemediathek.b.a:
    java.util.regex.Pattern OffsetPattern -> a
    java.util.regex.Pattern PreviewImagePattern -> b
    java.lang.String searchFor -> c
    java.util.List searchResults -> d
    boolean socketException -> e
    53:70:void deliverResult(java.util.List) -> a
    75:211:java.util.List loadInBackground() -> a
    216:216:void onReleaseResources(java.util.List) -> b
    223:229:void onStartLoading() -> onStartLoading
    232:232:boolean socketTimeoutOccurred() -> b
    1:1:void deliverResult(java.lang.Object) -> deliverResult
    1:1:java.lang.Object loadInBackground() -> loadInBackground
com.halcyonwaves.apps.meinemediathek.ndk.MMSInputStream -> com.halcyonwaves.apps.meinemediathek.ndk.MMSInputStream:
    boolean libLoaded -> a
    int len -> b
    int mms -> c
    37:41:void ensureLibLoaded() -> b
    105:106:void close() -> close
    109:109:int length() -> a
    void nativeClose(int) -> nativeClose
    int nativeConnect(java.lang.String) -> nativeConnect
    int nativeGetLength(int) -> nativeGetLength
    int nativeRead(int,byte[],int,int) -> nativeRead
    125:134:int read() -> read
    139:139:int read(byte[],int,int) -> read
com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService -> com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService:
    java.util.Map managedThreads -> a
    android.os.Messenger serviceMessenger -> b
    114:122:void cleanupFinishedThreads() -> a
    129:129:android.os.IBinder onBind(android.content.Intent) -> onBind
    137:139:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    113:113:void access$0(com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService) -> a
    106:106:java.util.Map access$1(com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService) -> b
com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService$IncomingHandler -> com.halcyonwaves.apps.meinemediathek.services.a:
    com.halcyonwaves.apps.meinemediathek.services.BackgroundDownloadService this$0 -> a
    35:85:void handleMessage(android.os.Message) -> handleMessage
com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread -> com.halcyonwaves.apps.meinemediathek.c.a:
    java.lang.Thread actualDownloadThread -> a
    java.lang.String downloadLink -> b
    android.os.PowerManager$WakeLock downloadWakeLock -> c
    com.halcyonwaves.apps.meinemediathek.ndk.MMSInputStream mmsInputStream -> d
    android.support.v4.app.NotificationCompat$Builder notificationBuilder -> e
    int notificationId -> f
    android.app.NotificationManager notificationManager -> g
    java.io.File outputFile -> h
    android.content.Context threadContext -> i
    136:311:void run() -> run
    55:55:android.os.PowerManager$WakeLock access$0(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> a
    65:65:android.support.v4.app.NotificationCompat$Builder access$1(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> b
    85:85:android.content.Context access$2(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> c
    75:75:android.app.NotificationManager access$3(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> d
    70:70:int access$4(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> e
    50:50:java.lang.String access$5(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> f
    80:80:java.io.File access$6(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> g
    80:80:void access$7(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread,java.io.File) -> a
    60:60:void access$8(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread,com.halcyonwaves.apps.meinemediathek.ndk.MMSInputStream) -> a
    60:60:com.halcyonwaves.apps.meinemediathek.ndk.MMSInputStream access$9(com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread) -> h
com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread$1 -> com.halcyonwaves.apps.meinemediathek.c.b:
    com.halcyonwaves.apps.meinemediathek.threads.DownloadStreamThread this$0 -> a
    144:290:void run() -> run
